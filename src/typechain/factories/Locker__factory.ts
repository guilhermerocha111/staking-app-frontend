/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Locker, LockerInterface } from "../Locker";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
      {
        internalType: "address",
        name: "_supply",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "vestingTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "vestingDuration",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimedAt",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "vestingTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "vestingDuration",
        type: "uint256",
      },
    ],
    name: "Vested",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "activePool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_pools",
        type: "address[]",
      },
    ],
    name: "addPools",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "claimVestedTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getClaimAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserClaims",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isClaimed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "vestingTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "vestingDuration",
            type: "uint256",
          },
        ],
        internalType: "struct Locker.Claims[]",
        name: "_claims",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pools",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supplyContract",
    outputs: [
      {
        internalType: "contract Supply",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vestAfter",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vestingDuration",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040526224ea0060055534801561001757600080fd5b5060405161126e38038061126e833981016040819052610036916100cb565b61003f3361007b565b60018055600280546001600160a01b039384166001600160a01b0319918216179091556006805492909316911617905562093a8060035561011c565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600080604083850312156100dd578182fd5b82516100e881610104565b60208401519092506100f981610104565b809150509250929050565b6001600160a01b038116811461011957600080fd5b50565b6111438061012b6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80637935510b11610097578063b36a4ab111610066578063b36a4ab1146101f9578063d54ad2a11461020c578063f2fde38b14610215578063fc0c546a1461022857600080fd5b80637935510b146101a25780637bcb4a64146101b55780638da5cb5b146101d5578063ac4afa38146101e657600080fd5b8063458efde3116100d3578063458efde31461015257806350cb82d31461015c5780636459b25014610187578063715018a61461019a57600080fd5b80631514617e146100fa57806317bdfd8c146101165780632aa96acd14610149575b600080fd5b61010360055481565b6040519081526020015b60405180910390f35b610139610124366004610e8f565b600a6020526000908152604090205460ff1681565b604051901515815260200161010d565b61010360035481565b61015a61023b565b005b60065461016f906001600160a01b031681565b6040516001600160a01b03909116815260200161010d565b610103610195366004610ea9565b61074e565b61015a6107ec565b61015a6101b0366004610fb9565b610822565b6101c86101c3366004610e8f565b610aea565b60405161010d9190610fe9565b6000546001600160a01b031661016f565b61016f6101f4366004610fb9565b610b99565b61015a610207366004610ed2565b610bc3565b61010360045481565b61015a610223366004610e8f565b610d69565b60025461016f906001600160a01b031681565b600260015414156102935760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026001908155336000908152600860205260409020549081106103ac573360009081526008602052604081206102cb6001846110af565b815481106102e957634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805160a0810182526005909302909101805460ff161515835260018101549383019390935260028301546001600160a01b0316908201526003820154606082018190526004909201546080820152915062093a809061035c906103564290565b90610e04565b10156103aa5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74207665737420616761696e206265666f72652037206461797300604482015260640161028a565b505b6000805b6007548110156105b7576000600782815481106103dd57634e487b7160e01b600052603260045260246000fd5b600091825260209091200154604051630a5a224760e31b81523360048201526001600160a01b03909116906352d1123890602401602060405180830381600087803b15801561042b57600080fd5b505af115801561043f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104639190610fd1565b905061046f8184611097565b925080156105a4576002546006546040516370a0823160e01b81526001600160a01b039182166004820152839291909116906370a082319060240160206040518083038186803b1580156104c257600080fd5b505afa1580156104d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fa9190610fd1565b101561053f5760405162461bcd60e51b81526020600482015260146024820152734e6f7420656e6f75676820616c6c6f776e61636560601b604482015260640161028a565b60065460405163301d29db60e01b8152306004820152602481018390526001600160a01b039091169063301d29db90604401600060405180830381600087803b15801561058b57600080fd5b505af115801561059f573d6000803e3d6000fd5b505050505b50806105af816110c6565b9150506103b0565b50600081116106085760405162461bcd60e51b815260206004820152601760248201527f6e6f74206861766520656e6f7567682072657761726473000000000000000000604482015260640161028a565b60006040518060a00160405280600015158152602001838152602001336001600160a01b0316815260200161063a4290565b815260200161065260055461064c4290565b90610e17565b9052336000908152600860209081526040808320805460018082018355918552938390208551600590950201805460ff191694151594909417845591840151838301558301516002830180546001600160a01b0319166001600160a01b039092169190911790556060830151600383015560808301516004909201919091559091506106df908490611097565b81604001516001600160a01b03167f941cbd834819010c51a7ba64d08be10e66647609622f7b32c3e81db19fdb038783602001518460600151856080015160405161073d939291909283526020830191909152604082015260600190565b60405180910390a350506001805550565b6001600160a01b038216600090815260086020526040812080548291908490811061078957634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805160a0810182526005909302909101805460ff1615158352600181015493830184905260028101546001600160a01b031691830191909152600381015460608301526004015460809091015291505092915050565b6000546001600160a01b031633146108165760405162461bcd60e51b815260040161028a90611062565b6108206000610e23565b565b600260015414156108755760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604482015260640161028a565b60026001553360009081526008602052604081208054839081106108a957634e487b7160e01b600052603260045260246000fd5b906000526020600020906005020190508060010154600014156109075760405162461bcd60e51b8152602060048201526016602482015275696e76616c696420696e646578206f6620636c61696d60501b604482015260640161028a565b805460ff161561094b5760405162461bcd60e51b815260206004820152600f60248201526e105b1c9958591e4818db185a5b5959608a1b604482015260640161028a565b428160040154106109ac5760405162461bcd60e51b815260206004820152602560248201527f63616e277420636c61696d206265666f72652076657374696e6720706572696f6044820152641908195b9960da1b606482015260840161028a565b600254600182015460405163a9059cbb60e01b815233600482015260248101919091526001600160a01b039091169063a9059cbb90604401602060405180830381600087803b1580156109fe57600080fd5b505af1158015610a12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a369190610f99565b610a785760405162461bcd60e51b81526020600482015260136024820152726e6f20746f6b656e7320666f7220636c61696d60681b604482015260640161028a565b805460ff19166001908117825581015460038201546004830154849233927f68f63ec46cb9860416fca2d4e91e8556ee9bebfbebd14b92a5d113019063922092610abf4290565b60408051948552602085019390935291830152606082015260800160405180910390a3505060018055565b6001600160a01b0381166000908152600860209081526040808320805482518185028101850190935280835260609492939192909184015b82821015610b8e5760008481526020908190206040805160a08101825260058602909201805460ff16151583526001808201548486015260028201546001600160a01b031692840192909252600381015460608401526004015460808301529083529092019101610b22565b505050509050919050565b60078181548110610ba957600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b03163314610bed5760405162461bcd60e51b815260040161028a90611062565b60005b8151811015610d655760006001600160a01b0316828281518110610c2457634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03161415610c4057600080fd5b600a6000838381518110610c6457634e487b7160e01b600052603260045260246000fd5b6020908102919091018101516001600160a01b031682528101919091526040016000205460ff16610d53576007828281518110610cb157634e487b7160e01b600052603260045260246000fd5b60209081029190910181015182546001808201855560009485529284200180546001600160a01b0319166001600160a01b0390921691909117905583519091600a91859085908110610d1357634e487b7160e01b600052603260045260246000fd5b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060006101000a81548160ff0219169083151502179055505b80610d5d816110c6565b915050610bf0565b5050565b6000546001600160a01b03163314610d935760405162461bcd60e51b815260040161028a90611062565b6001600160a01b038116610df85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161028a565b610e0181610e23565b50565b6000610e1082846110af565b9392505050565b6000610e108284611097565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80356001600160a01b0381168114610e8a57600080fd5b919050565b600060208284031215610ea0578081fd5b610e1082610e73565b60008060408385031215610ebb578081fd5b610ec483610e73565b946020939093013593505050565b60006020808385031215610ee4578182fd5b823567ffffffffffffffff80821115610efb578384fd5b818501915085601f830112610f0e578384fd5b813581811115610f2057610f206110f7565b8060051b604051601f19603f83011681018181108582111715610f4557610f456110f7565b604052828152858101935084860182860187018a1015610f63578788fd5b8795505b83861015610f8c57610f7881610e73565b855260019590950194938601938601610f67565b5098975050505050505050565b600060208284031215610faa578081fd5b81518015158114610e10578182fd5b600060208284031215610fca578081fd5b5035919050565b600060208284031215610fe2578081fd5b5051919050565b602080825282518282018190526000919060409081850190868401855b828110156110555781518051151585528681015187860152858101516001600160a01b031686860152606080820151908601526080908101519085015260a09093019290850190600101611006565b5091979650505050505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600082198211156110aa576110aa6110e1565b500190565b6000828210156110c1576110c16110e1565b500390565b60006000198214156110da576110da6110e1565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220856cae72c1ca8c45ddd474980d2c2fd0e6a9577a2626e90377fca890f330db6464736f6c63430008040033";

export class Locker__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _token: string,
    _supply: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Locker> {
    return super.deploy(_token, _supply, overrides || {}) as Promise<Locker>;
  }
  getDeployTransaction(
    _token: string,
    _supply: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_token, _supply, overrides || {});
  }
  attach(address: string): Locker {
    return super.attach(address) as Locker;
  }
  connect(signer: Signer): Locker__factory {
    return super.connect(signer) as Locker__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LockerInterface {
    return new utils.Interface(_abi) as LockerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Locker {
    return new Contract(address, _abi, signerOrProvider) as Locker;
  }
}
