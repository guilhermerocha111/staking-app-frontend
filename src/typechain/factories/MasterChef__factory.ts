/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MasterChef, MasterChefInterface } from "../MasterChef";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_stakingToken",
        type: "address",
      },
      {
        internalType: "contract IERC20",
        name: "_rewardingToken",
        type: "address",
      },
      {
        internalType: "address",
        name: "_vesting",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenPerBlock",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenPerBlockMaxCap",
        type: "uint256",
      },
    ],
    name: "TokenPerBlockMaxCapUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenPerBlock",
        type: "uint256",
      },
    ],
    name: "TokenPerBlockUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [],
    name: "approveForVesting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_stakeFor",
        type: "uint8",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getCurrentClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getCurrentStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getCurrentUnstaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "getStakes",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "weight",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakeFor",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakeUntill",
            type: "uint256",
          },
        ],
        internalType: "struct MasterChef.UserInfo[]",
        name: "stakes",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "pendingReward",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolInfo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastRewardBlock",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalWeight",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "poolRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "totalRewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "pull",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "rewardsInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "totalClaimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalUnstaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalWeight",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "setTokenPerBlockMaxCap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPerBlock",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenPerBlockMaxCap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpuase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "userStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeFor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeUntill",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vesting",
    outputs: [
      {
        internalType: "contract IVesting",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "stakeIndex",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60e0604052683635c9adc5dea000006008553480156200001e57600080fd5b5060405162001a6f38038062001a6f83398101604081905262000041916200025b565b6200004c336200020b565b600180556002805460ff191690556001600160601b0319606085811b8216608090815294811b821660c05292831b1660a0526003556040805192830181526001600160a01b03909316808352600060208481018290524395850186905293909201829052600480546001600160a01b03191690911790556005819055600692909255600782905560217f72c6bfb7988af3a1efa6568f02a999bc52252641c659d85961ca3d372b57d5cf5560647f64c15cc42be7899b001f818cf4433057002112c418d1d3a67cd5cb453051d33e5560c87f0387e9d1203691d8e3362a7e4c6723de358a4010d7f31ecbec3fbfc61d1c75fc556101907f765e72d9703c9804ad76c7d0af52f5313041ea56bb31a328e17fea205151b5ea55600c908190526224ea007fd421a5181c571bba3f01190c922c3b2a896fc1d84e86c9f17ac10e67ebef8b5c55626ebe007fc0da782485e77ae272268ae0a3ff44c1552ecb60b3743924de17a815e0a3cfd75562eff1007f980f427e00e74f6d338adfccc7468518c8c8ea00836d0dce98c5fe154e17bf2b5590526301dfe2007f37877ab6ac9e279d19a4db3294b259b5a4163c0ed597627ae79e33d80cde4db855620002cd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000806000806080858703121562000271578384fd5b84516200027e81620002b4565b60208601519094506200029181620002b4565b6040860151909350620002a481620002b4565b6060959095015193969295505050565b6001600160a01b0381168114620002ca57600080fd5b50565b60805160601c60a05160601c60c05160601c61173f6200033060003960008181610198015281816107320152610d27015260008181610270015281816105e90152818161065d015281816107030152610cf7015260006103f2015261173f6000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80637ba6f458116100de578063b5d5b5fa11610097578063f40f0f5211610071578063f40f0f52146103da578063fc0c546a146103ed578063fc56a81314610414578063fccc887f1461046957600080fd5b8063b5d5b5fa14610379578063bdfc7f0c146103b4578063f2fde38b146103c757600080fd5b80637ba6f458146103275780638a9758fe146103475780638bc6beb21461034f5780638da5cb5b146103575780639ba2bde814610368578063a7bbb52d1461037057600080fd5b806344c63eec1161014b5780635c975abb116101255780635c975abb146102ee5780635d5eaa4f14610304578063654cfdff1461030c578063715018a61461031f57600080fd5b806344c63eec1461026b57806352d11238146102925780635a2f3d09146102a557600080fd5b80630f8a267b146101935780631f715f9b146101d75780632e1a7d4d1461020e578063379607f5146102235780634198709a14610236578063443de10c1461023f575b600080fd5b6101ba7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6102006101e53660046114a0565b6001600160a01b03166000908152600a602052604090205490565b6040519081526020016101ce565b61022161021c366004611503565b610495565b005b610221610231366004611503565b6105cd565b61020060035481565b61020061024d3660046114a0565b6001600160a01b03166000908152600a602052604090206002015490565b6101ba7f000000000000000000000000000000000000000000000000000000000000000081565b6102006102a03660046114a0565b610650565b6004546005546006546007546102c4936001600160a01b031692919084565b604080516001600160a01b03909516855260208501939093529183015260608201526080016101ce565b60025460ff1660405190151581526020016101ce565b6102216107b4565b61022161031a366004611533565b6107e8565b610221610b85565b61033a6103353660046114a0565b610bb9565b6040516101ce9190611583565b610221610c60565b610200610c92565b6000546001600160a01b03166101ba565b610221610cb6565b61020060085481565b61038c6103873660046114ba565b610da6565b604080519586526020860194909452928401919091526060830152608082015260a0016101ce565b6102216103c2366004611503565b610df4565b6102216103d53660046114a0565b610e59565b6102006103e83660046114a0565b610ef1565b6101ba7f000000000000000000000000000000000000000000000000000000000000000081565b6104496104223660046114a0565b600a6020526000908152604090208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080016101ce565b6102006104773660046114a0565b6001600160a01b03166000908152600a602052604090206001015490565b600260015414156104ed5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b600260015560006104fd82610f3f565b90504281608001511061050f57600080fd5b8051336000908152600a602052604081206001018054909190610533908490611659565b9091555050602080820151336000908152600a909252604082206003018054919290916105619084906116b0565b90915550508051600454610582916001600160a01b03909116903390610ff2565b805160405133917ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b568916105bd91868252602082015260400190565b60405180910390a2505060018055565b60405163017043b560e51b8152336004820152602481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e0876a090604401600060405180830381600087803b15801561063557600080fd5b505af1158015610649573d6000803e3d6000fd5b5050505050565b6000336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461068757600080fd5b61069082610ef1565b9050600081116106d75760405162461bcd60e51b81526020600482015260126024820152716e6f7420656e6f756768207265776172647360701b60448201526064016104e4565b336000908152600a6020526040808220600301919091555163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390604401602060405180830381600087803b15801561077657600080fd5b505af115801561078a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107ae91906114e3565b50919050565b6000546001600160a01b031633146107de5760405162461bcd60e51b81526004016104e490611624565b6107e661105a565b565b6002600154141561083b5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016104e4565b600260015561084c60025460ff1690565b1561088c5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104e4565b8060ff16806001148061089f5750806003145b806108aa5750806006145b806108b5575080600c145b6108fa5760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a59081cdd185ada5b99c81c195c9a5bd960521b60448201526064016104e4565b60048054604051636eb1769f60e11b8152339281019290925230602483015284916001600160a01b039091169063dd62ed3e9060440160206040518083038186803b15801561094857600080fd5b505afa15801561095c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610980919061151b565b101561098b57600080fd5b6109bd6040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b83815260ff831660608201819052426040808401919091526000918252600b6020529020546109f9906064906109f390876110f2565b90611105565b60208083019190915260ff84166000908152600c9091526040902054610a20904290611111565b608082019081523360009081526009602090815260408083208054600181810183559185528385208751600592830290910190815593870151918401919091559085015160028301556060850151600383015592516004918201558254909287929091610a8e908490611659565b90915550506020820151600382018054600090610aac908490611659565b90915550508151336000908152600a602052604081206002018054909190610ad5908490611659565b9091555050602080830151336000908152600a90925260408220600301805491929091610b03908490611659565b909155505033600090815260096020526040812054610b24906001906116b0565b8254909150610b3e906001600160a01b031633308961111d565b604080518281526020810188905233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a250506001805550505050565b6000546001600160a01b03163314610baf5760405162461bcd60e51b81526004016104e490611624565b6107e6600061115b565b6001600160a01b0381166000908152600960209081526040808320805482518185028101850190935280835260609492939192909184015b82821015610c5557838290600052602060002090600502016040518060a00160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152505081526020019060010190610bf1565b505050509050919050565b6000546001600160a01b03163314610c8a5760405162461bcd60e51b81526004016104e490611624565b6107e66111ab565b60035460065460009190610ca7904390611225565b610cb19190611691565b905090565b6000546001600160a01b03163314610ce05760405162461bcd60e51b81526004016104e490611624565b60405163095ea7b360e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116600483015260001960248301527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390604401602060405180830381600087803b158015610d6b57600080fd5b505af1158015610d7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da391906114e3565b50565b60096020528160005260406000208181548110610dc257600080fd5b600091825260209091206005909102018054600182015460028301546003840154600490940154929550909350919085565b6000546001600160a01b03163314610e1e5760405162461bcd60e51b81526004016104e490611624565b60088190556040518181527f077314f91a82ed8438b0dfdfe50d3fa564f5f11abde2aeb87c2960836e8470639060200160405180910390a150565b6000546001600160a01b03163314610e835760405162461bcd60e51b81526004016104e490611624565b6001600160a01b038116610ee85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104e4565b610da38161115b565b600754600090610f0357506000919050565b6007546001600160a01b0383166000908152600a6020526040902060030154610f3991906109f390610f33610c92565b906110f2565b92915050565b610f716040518060a0016040528060008152602001600081526020016000815260200160008152602001600081525090565b336000908152600960205260409020805483908110610fa057634e487b7160e01b600052603260045260246000fd5b90600052602060002090600502016040518060a0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820154815250509050919050565b6040516001600160a01b03831660248201526044810182905261105590849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611231565b505050565b60025460ff16156110a05760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016104e4565b6002805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586110d53390565b6040516001600160a01b03909116815260200160405180910390a1565b60006110fe8284611691565b9392505050565b60006110fe8284611671565b60006110fe8284611659565b6040516001600160a01b03808516602483015283166044820152606481018290526111559085906323b872dd60e01b9060840161101e565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60025460ff166111f45760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016104e4565b6002805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336110d5565b60006110fe82846116b0565b6000611286826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113039092919063ffffffff16565b80519091501561105557808060200190518101906112a491906114e3565b6110555760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016104e4565b6060611312848460008561131a565b949350505050565b60608247101561137b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016104e4565b6001600160a01b0385163b6113d25760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104e4565b600080866001600160a01b031685876040516113ee9190611567565b60006040518083038185875af1925050503d806000811461142b576040519150601f19603f3d011682016040523d82523d6000602084013e611430565b606091505b509150915061144082828661144b565b979650505050505050565b6060831561145a5750816110fe565b82511561146a5782518084602001fd5b8160405162461bcd60e51b81526004016104e491906115f1565b80356001600160a01b038116811461149b57600080fd5b919050565b6000602082840312156114b1578081fd5b6110fe82611484565b600080604083850312156114cc578081fd5b6114d583611484565b946020939093013593505050565b6000602082840312156114f4578081fd5b815180151581146110fe578182fd5b600060208284031215611514578081fd5b5035919050565b60006020828403121561152c578081fd5b5051919050565b60008060408385031215611545578182fd5b82359150602083013560ff8116811461155c578182fd5b809150509250929050565b600082516115798184602087016116c7565b9190910192915050565b602080825282518282018190526000919060409081850190868401855b828110156115e45781518051855286810151878601528581015186860152606080820151908601526080908101519085015260a090930192908501906001016115a0565b5091979650505050505050565b60208152600082518060208401526116108160408501602087016116c7565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6000821982111561166c5761166c6116f3565b500190565b60008261168c57634e487b7160e01b81526012600452602481fd5b500490565b60008160001904831182151516156116ab576116ab6116f3565b500290565b6000828210156116c2576116c26116f3565b500390565b60005b838110156116e25781810151838201526020016116ca565b838111156111555750506000910152565b634e487b7160e01b600052601160045260246000fdfea26469706673582212206eacd409a794d0a3eca13239a0ee9a26cdad318aed2ff2813798009b681d56d764736f6c63430008040033";

export class MasterChef__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _stakingToken: string,
    _rewardingToken: string,
    _vesting: string,
    _tokenPerBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MasterChef> {
    return super.deploy(
      _stakingToken,
      _rewardingToken,
      _vesting,
      _tokenPerBlock,
      overrides || {}
    ) as Promise<MasterChef>;
  }
  getDeployTransaction(
    _stakingToken: string,
    _rewardingToken: string,
    _vesting: string,
    _tokenPerBlock: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _stakingToken,
      _rewardingToken,
      _vesting,
      _tokenPerBlock,
      overrides || {}
    );
  }
  attach(address: string): MasterChef {
    return super.attach(address) as MasterChef;
  }
  connect(signer: Signer): MasterChef__factory {
    return super.connect(signer) as MasterChef__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MasterChefInterface {
    return new utils.Interface(_abi) as MasterChefInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MasterChef {
    return new Contract(address, _abi, signerOrProvider) as MasterChef;
  }
}
