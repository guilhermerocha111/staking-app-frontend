/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  StakingRewards,
  StakingRewardsInterface,
} from "../StakingRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_rewardsToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_rewardsPerMonth",
        type: "uint256",
      },
      {
        internalType: "uint256[4]",
        name: "weights",
        type: "uint256[4]",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Deposit",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "poolId",
        type: "uint256",
      },
    ],
    name: "PoolCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "reward",
        type: "uint256",
      },
    ],
    name: "RewardPaid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newDuration",
        type: "uint256",
      },
    ],
    name: "RewardsDurationUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_stakeToken",
        type: "address",
      },
      {
        internalType: "enum StakingRewards.Type",
        name: "_type",
        type: "uint8",
      },
    ],
    name: "createPool",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_stakeFor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
    ],
    name: "pendings",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolStakers",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeFor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "weight",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastTimestamp",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "oneMonth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "threeMonth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "sixMonth",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "year",
            type: "uint256",
          },
        ],
        internalType: "struct StakingRewards.StakesBucket",
        name: "stakes",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "pools",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "stakeToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokensStaked",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalWeight",
        type: "uint256",
      },
      {
        internalType: "enum StakingRewards.Type",
        name: "_type",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rewardsToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpuase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userRewardPerTokenPaid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_poolId",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620022b7380380620022b7833981016040819052620000349162000183565b6001600055620000443362000131565b6001805460ff60a01b19168155600280546001600160a01b0319166001600160a01b039590951694909417909355600391825580516000938452600760209081527fb39221ace053465ec3453ce2b36430bd138b997ecea25c1043da0c366812b828919091558101519183527f3be6fd20d5acfde5b873b48692cd31f4d3c7e8ee8a813af4696af8859e5ca6c6919091556040810151600683527f55c5b153ab560fcde54a63b18c7f53d75501706907cef8767fbded79ab9997c75560600151600c9091527f74b6357e277c778e8ad9a2761a935d45336ec91439b9e1b117eda2efdfe38fad556200024f565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600080600060c0848603121562000198578283fd5b83516001600160a01b0381168114620001af578384fd5b80935050602080850151925085605f860112620001ca578182fd5b604051608081016001600160401b0381118282101715620001ef57620001ef62000239565b806040525080604087018860c08901111562000209578485fd5b845b60048110156200022a578151835291840191908401906001016200020b565b50505080925050509250925092565b634e487b7160e01b600052604160045260246000fd5b612058806200025f6000396000f3fe608060405234801561001057600080fd5b50600436106100f45760003560e01c80638a9758fe11610097578063b17213aa11610066578063b17213aa146101f7578063b798aaae1461020a578063d1af0c7d146102f0578063f2fde38b1461030357600080fd5b80638a9758fe146101875780638b8763471461018f5780638da5cb5b146101af578063ac4afa38146101d457600080fd5b80635d5eaa4f116100d35780635d5eaa4f14610143578063715018a61461014b5780637965df39146101535780638980f11f1461017457600080fd5b8062aeef8a146100f95780632e1a7d4d1461010e5780635c975abb14610121575b600080fd5b61010c610107366004611cb3565b610316565b005b61010c61011c366004611c77565b61064e565b600154600160a01b900460ff1660405190151581526020015b60405180910390f35b61010c610a61565b61010c610a95565b610166610161366004611c77565b610ac9565b60405190815260200161013a565b61010c610182366004611bf1565b610cca565b61010c610dff565b61016661019d366004611bd5565b60066020526000908152604090205481565b6001546001600160a01b03165b6040516001600160a01b03909116815260200161013a565b6101e76101e2366004611c77565b610e31565b60405161013a9493929190611cfa565b61010c610205366004611c3c565b610e78565b61028f610218366004611c8f565b6005602081815260009384526040808520825292845292829020805460018201546002830154600384015460048501549585015460068601548851608081018a526007880154815260088801549a81019a909a526009870154988a0198909852600a90950154606089015292969195909492939188565b604080519889526020808a019890985288810196909652606080890195909552608088019390935260a087019190915260c0860152805160e0860152928301516101008501529082015161012084015201516101408201526101600161013a565b6002546101bc906001600160a01b031681565b61010c610311366004611bd5565b611076565b600260005414156103425760405162461bcd60e51b815260040161033990611dd7565b60405180910390fd5b6002600055600154600160a01b900460ff16156103715760405162461bcd60e51b815260040161033990611d78565b8180600114806103815750806003145b8061038c5750806006145b80610397575080600c145b6103dc5760405162461bcd60e51b81526020600482015260166024820152751a5b9d985b1a59081cdd185ada5b99c81c195c9a5bd960521b6044820152606401610339565b6000821161041d5760405162461bcd60e51b815260206004820152600e60248201526d043616e6e6f74207374616b6520360941b6044820152606401610339565b60006004858154811061044057634e487b7160e01b600052603260045260246000fd5b600091825260208083208884526005825260408085203386529092529220600490910290910191506002600383015460ff16600281111561049157634e487b7160e01b600052602160045260246000fd5b141561057f576104aa68056bc75e2d6310000085611fcd565b156105065760405162461bcd60e51b815260206004820152602660248201527f7374616b6520616d6f756e742073686f756c64206d65206d756c7469706c652060448201526506f66203130360d41b6064820152608401610339565b686c6b935b8bbd4000008411156105535760405162461bcd60e51b815260206004820152601160248201527052656163686564206d61782d7374616b6560781b6044820152606401610339565b6000806000610560611111565b925092509250610576838383601760008061113c565b60028501555050505b83815560038101859055426005820155600182015461059e9085611198565b60018301556000858152600760205260408120546105d090670de0b6b3a7640000906105ca90886111ab565b906111b7565b60028401549091506105e29082611198565b600284015560048201819055604080518881526020810187905233917f90890809c654f11d6e72a28fa60149770a0d11ec6c92319d6ceb2bb0a4ea1a15910160405180910390a28254610640906001600160a01b03163330886111c3565b505060016000555050505050565b600260005414156106715760405162461bcd60e51b815260040161033990611dd7565b6002600055600154600160a01b900460ff16156106a05760405162461bcd60e51b815260040161033990611d78565b80336000600483815481106106c557634e487b7160e01b600052603260045260246000fd5b600091825260209182902060408051608081018252600490930290910180546001600160a01b03168352600181015493830193909352600280840154918301919091526003830154919291606084019160ff9091169081111561073857634e487b7160e01b600052602160045260246000fd5b600281111561075757634e487b7160e01b600052602160045260246000fd5b90525060008481526005602081815260408084206001600160a01b03881685528252928390208351610100810185528154815260018201548184015260028083015482870152600383015460608084019190915260048401546080808501919091529584015460a0840152600684015460c08401528651958601875260078401548652600884015494860194909452600983015495850195909552600a909101548383015260e0810192909252830151929350918181111561082957634e487b7160e01b600052602160045260246000fd5b141561089257601861083f826040015142611234565b101561088d5760405162461bcd60e51b815260206004820152601f60248201527f43616e6e6f74207769746864726177206265666f726520323420686f757273006044820152606401610339565b610910565b6108b381606001516224ea006108a89190611f2c565b604083015190611198565b4210156109105760405162461bcd60e51b815260206004820152602560248201527f43616e6e6f74207769746864726177206265666f72652076657374696e672070604482015264195c9a5bd960da1b6064820152608401610339565b60006004868154811061093357634e487b7160e01b600052603260045260246000fd5b600091825260209182902060408051608081018252600490930290910180546001600160a01b03168352600181015493830193909352600280840154918301919091526003830154919291606084019160ff909116908111156109a657634e487b7160e01b600052602160045260246000fd5b60028111156109c557634e487b7160e01b600052602160045260246000fd5b90525090506000806109d68861125a565b9092509050600283606001516002811115610a0157634e487b7160e01b600052602160045260246000fd5b14610a1d57600254610a1d906001600160a01b03163383611544565b60405181815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d59060200160405180910390a250506001600055505050505050565b6001546001600160a01b03163314610a8b5760405162461bcd60e51b815260040161033990611da2565b610a93611579565b565b6001546001600160a01b03163314610abf5760405162461bcd60e51b815260040161033990611da2565b610a9360006115fb565b60008060048381548110610aed57634e487b7160e01b600052603260045260246000fd5b600091825260209182902060408051608081018252600490930290910180546001600160a01b03168352600181015493830193909352600280840154918301919091526003830154919291606084019160ff90911690811115610b6057634e487b7160e01b600052602160045260246000fd5b6002811115610b7f57634e487b7160e01b600052602160045260246000fd5b90525060008481526005602081815260408084203385528252928390208351610100810185528154815260018201548184015260028083015482870152600383015460608084019190915260048401546080808501919091529584015460a0840152600684015460c08401528651958601875260078401548652600884015494860194909452600983015495850195909552600a909101548383015260e08101929092528301519293509190816002811115610c4b57634e487b7160e01b600052602160045260246000fd5b1415610cc2576000610c618360a001514261164d565b8351909150610c77906064906105ca90846111ab565b610c819086611e4f565b9450610c966801158e460913d0000086611e95565b15610cc057610cae856801158e460913d0000061166a565b60208401526801158e460913d0000094505b505b505050919050565b6001546001600160a01b03163314610cf45760405162461bcd60e51b815260040161033990611da2565b60026000541415610d175760405162461bcd60e51b815260040161033990611dd7565b600260009081556001600160a01b03831681526008602052604090205460ff1615610d8e5760405162461bcd60e51b815260206004820152602160248201527f43616e6e6f7420776974686472617720746865207374616b696e6720746f6b656044820152603760f91b6064820152608401610339565b610db4610da36001546001600160a01b031690565b6001600160a01b0384169083611544565b604080516001600160a01b0384168152602081018390527f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28910160405180910390a150506001600055565b6001546001600160a01b03163314610e295760405162461bcd60e51b815260040161033990611da2565b610a93611676565b60048181548110610e4157600080fd5b600091825260209091206004909102018054600182015460028301546003909301546001600160a01b039092169350919060ff1684565b6001546001600160a01b03163314610ea25760405162461bcd60e51b815260040161033990611da2565b610eca6040805160808101825260008082526020820181905291810182905290606082015290565b6001600160a01b038316815260608101826002811115610efa57634e487b7160e01b600052602160045260246000fd5b90816002811115610f1b57634e487b7160e01b600052602160045260246000fd5b905250600480546001818101835560008390528351919092027f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b810180546001600160a01b039093166001600160a01b031990931692909217825560208401517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19c82015560408401517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19d82015560608401517f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19e9091018054859460ff199091169083600281111561101c57634e487b7160e01b600052602160045260246000fd5b0217905550506004546000915061103590600190611f8a565b90507ffa88d81eaffbf548e3ffc6c6458827ce9906ad714060746b80909cdf8d1d7ef78160405161106891815260200190565b60405180910390a150505050565b6001546001600160a01b031633146110a05760405162461bcd60e51b815260040161033990611da2565b6001600160a01b0381166111055760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610339565b61110e816115fb565b50565b600080600061111f426116fa565b925061112a4261171a565b915061113542611734565b9050909192565b60008161114a603c85611f2c565b611156610e1087611f2c565b620151806111658b8b8b61174e565b61116f9190611f2c565b6111799190611e4f565b6111839190611e4f565b61118d9190611e4f565b979650505050505050565b60006111a48284611e4f565b9392505050565b60006111a48284611f2c565b60006111a48284611e95565b6040516001600160a01b038085166024830152831660448201526064810182905261122e9085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261188b565b50505050565b60008183111561124357600080fd5b610e106112508484611f8a565b6111a49190611e95565b60008060006004848154811061128057634e487b7160e01b600052603260045260246000fd5b600091825260209182902060408051608081018252600490930290910180546001600160a01b03168352600181015493830193909352600280840154918301919091526003830154919291606084019160ff909116908111156112f357634e487b7160e01b600052602160045260246000fd5b600281111561131257634e487b7160e01b600052602160045260246000fd5b905250606080820151600087815260056020818152604080842033855282528084208151610100810183528154815260018201548185019081526002830154828501526003830154828a015260048301546080808401919091529583015460a0830152600683015460c08301528351958601845260078301548652600883015494860194909452600982015492850192909252600a01549583019590955260e0850191909152519394509092818460028111156113df57634e487b7160e01b600052602160045260246000fd5b141561144f5761142485604001516105ca60076000876060015181526020019081526020016000205461141e600c6003546111ab90919063ffffffff16565b906111ab565b915061144c85604001516105ca856080015161141e600c6003546111ab90919063ffffffff16565b90505b600184600281111561147157634e487b7160e01b600052602160045260246000fd5b5050600284600281111561149557634e487b7160e01b600052602160045260246000fd5b14156115375760006114ab84604001514261164d565b84519091506114c1906064906105ca90846111ab565b6114cb9083611e4f565b91506114e06801158e460913d0000083611e95565b1561150a576114f8826801158e460913d0000061166a565b60208501526801158e460913d0000091505b6000806000611517611111565b92509250925061152d838383601760008061113c565b6040880152505050505b9097909650945050505050565b6040516001600160a01b03831660248201526044810182905261157490849063a9059cbb60e01b906064016111f7565b505050565b600154600160a01b900460ff16156115a35760405162461bcd60e51b815260040161033990611d78565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586115de3390565b6040516001600160a01b03909116815260200160405180910390a1565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60008183111561165c57600080fd5b620151806112508484611f8a565b60006111a48284611f8a565b600154600160a01b900460ff166116c65760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610339565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa336115de565b600061171161170c6201518084611e95565b61195d565b50909392505050565b600061172c61170c6201518084611e95565b509392505050565b600061174661170c6201518084611e95565b949350505050565b60006107b284101561175f57600080fd5b838383600062253d8c60046064600c611779600e88611f4b565b6117839190611e67565b61178f88611324611e0e565b6117999190611e0e565b6117a39190611e67565b6117ae906003611ea9565b6117b89190611e67565b600c806117c6600e88611f4b565b6117d09190611e67565b6117db90600c611ea9565b6117e6600288611f4b565b6117f09190611f4b565b6117fc9061016f611ea9565b6118069190611e67565b6004600c611815600e89611f4b565b61181f9190611e67565b61182b896112c0611e0e565b6118359190611e0e565b611841906105b5611ea9565b61184b9190611e67565b611857617d4b87611f4b565b6118619190611e0e565b61186b9190611e0e565b6118759190611f4b565b61187f9190611f4b565b98975050505050505050565b60006118e0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611ad19092919063ffffffff16565b80519091501561157457808060200190518101906118fe9190611c1c565b6115745760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610339565b60008080838162253d8c6119748362010bd9611e0e565b61197e9190611e0e565b9050600062023ab1611991836004611ea9565b61199b9190611e67565b905060046119ac8262023ab1611ea9565b6119b7906003611e0e565b6119c19190611e67565b6119cb9083611f4b565b9150600062164b096119de846001611e0e565b6119ea90610fa0611ea9565b6119f49190611e67565b90506004611a04826105b5611ea9565b611a0e9190611e67565b611a189084611f4b565b611a2390601f611e0e565b9250600061098f611a35856050611ea9565b611a3f9190611e67565b905060006050611a518361098f611ea9565b611a5b9190611e67565b611a659086611f4b565b9050611a72600b83611e67565b9450611a7f85600c611ea9565b611a8a836002611e0e565b611a949190611f4b565b91508483611aa3603187611f4b565b611aae906064611ea9565b611ab89190611e0e565b611ac29190611e0e565b9a919950975095505050505050565b60606117468484600085856001600160a01b0385163b611b335760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610339565b600080866001600160a01b03168587604051611b4f9190611cde565b60006040518083038185875af1925050503d8060008114611b8c576040519150601f19603f3d011682016040523d82523d6000602084013e611b91565b606091505b509150915061118d82828660608315611bab5750816111a4565b825115611bbb5782518084602001fd5b8160405162461bcd60e51b81526004016103399190611d45565b600060208284031215611be6578081fd5b81356111a48161200d565b60008060408385031215611c03578081fd5b8235611c0e8161200d565b946020939093013593505050565b600060208284031215611c2d578081fd5b815180151581146111a4578182fd5b60008060408385031215611c4e578182fd5b8235611c598161200d565b9150602083013560038110611c6c578182fd5b809150509250929050565b600060208284031215611c88578081fd5b5035919050565b60008060408385031215611ca1578182fd5b823591506020830135611c6c8161200d565b600080600060608486031215611cc7578081fd5b505081359360208301359350604090920135919050565b60008251611cf0818460208701611fa1565b9190910192915050565b6001600160a01b038516815260208101849052604081018390526080810160038310611d3657634e487b7160e01b600052602160045260246000fd5b82606083015295945050505050565b6020815260008251806020840152611d64816040850160208701611fa1565b601f01601f19169190910160400192915050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600080821280156001600160ff1b0384900385131615611e3057611e30611fe1565b600160ff1b8390038412811615611e4957611e49611fe1565b50500190565b60008219821115611e6257611e62611fe1565b500190565b600082611e7657611e76611ff7565b600160ff1b821460001984141615611e9057611e90611fe1565b500590565b600082611ea457611ea4611ff7565b500490565b60006001600160ff1b0381841382841380821686840486111615611ecf57611ecf611fe1565b600160ff1b84871282811687830589121615611eed57611eed611fe1565b858712925087820587128484161615611f0857611f08611fe1565b87850587128184161615611f1e57611f1e611fe1565b505050929093029392505050565b6000816000190483118215151615611f4657611f46611fe1565b500290565b60008083128015600160ff1b850184121615611f6957611f69611fe1565b6001600160ff1b0384018313811615611f8457611f84611fe1565b50500390565b600082821015611f9c57611f9c611fe1565b500390565b60005b83811015611fbc578181015183820152602001611fa4565b8381111561122e5750506000910152565b600082611fdc57611fdc611ff7565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b038116811461110e57600080fdfea2646970667358221220c1f759a9db74b4c6d40d659e73b389c31b477dd4ce2797ee2bb30a7b17d2874464736f6c63430008040033";

export class StakingRewards__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _rewardsToken: string,
    _rewardsPerMonth: BigNumberish,
    weights: [BigNumberish, BigNumberish, BigNumberish, BigNumberish],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<StakingRewards> {
    return super.deploy(
      _rewardsToken,
      _rewardsPerMonth,
      weights,
      overrides || {}
    ) as Promise<StakingRewards>;
  }
  getDeployTransaction(
    _rewardsToken: string,
    _rewardsPerMonth: BigNumberish,
    weights: [BigNumberish, BigNumberish, BigNumberish, BigNumberish],
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _rewardsToken,
      _rewardsPerMonth,
      weights,
      overrides || {}
    );
  }
  attach(address: string): StakingRewards {
    return super.attach(address) as StakingRewards;
  }
  connect(signer: Signer): StakingRewards__factory {
    return super.connect(signer) as StakingRewards__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingRewardsInterface {
    return new utils.Interface(_abi) as StakingRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): StakingRewards {
    return new Contract(address, _abi, signerOrProvider) as StakingRewards;
  }
}
