/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFTRewards, NFTRewardsInterface } from "../NFTRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_stakingToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "estimatedRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numberOfStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolStakers",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastStakeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastStakeTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastClaim",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpuase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162001b4338038062001b43833981016040819052610031916100c3565b600160005561003f33610071565b6001805460ff60a01b19169055600280546001600160a01b0319166001600160a01b03929092169190911790556100f1565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156100d4578081fd5b81516001600160a01b03811681146100ea578182fd5b9392505050565b611a4280620001016000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638980f11f116100a2578063cddb3e7b11610071578063cddb3e7b146101fe578063daae16e11461027e578063dfef667914610291578063eeb58d0a146102b1578063f2fde38b146102b957600080fd5b80638980f11f146101bf5780638a9758fe146101d25780638da5cb5b146101da578063a694fc3a146101eb57600080fd5b806364ab8675116100de57806364ab867514610162578063695464e914610183578063715018a61461018c57806372f702f31461019457600080fd5b80632e17de7814610110578063379607f5146101255780635c975abb146101385780635d5eaa4f1461015a575b600080fd5b61012361011e366004611710565b6102cc565b005b610123610133366004611710565b6105e5565b600154600160a01b900460ff1660405190151581526020015b60405180910390f35b61012361074a565b6101756101703660046116ad565b61077e565b604051908152602001610151565b61017560035481565b61012361084b565b6002546101a7906001600160a01b031681565b6040516001600160a01b039091168152602001610151565b6101236101cd3660046116c7565b61087f565b610123610942565b6001546001600160a01b03166101a7565b6101236101f9366004611710565b610974565b61024961020c3660046116ad565b6004602081905260009182526040909120805460018201546002830154600384015494840154600585015460069095015493959294919390919087565b604080519788526020880196909652948601939093526060850191909152608084015260a083015260c082015260e001610151565b61017561028c3660046116ad565b610c98565b61017561029f3660046116ad565b60056020526000908152604090205481565b600354610175565b6101236102c73660046116ad565b610d6f565b600260005414156102f85760405162461bcd60e51b81526004016102ef906117d6565b60405180910390fd5b6002600055600154600160a01b900460ff16156103275760405162461bcd60e51b81526004016102ef90611777565b80683635c9adc5dea0000081101561036f5760405162461bcd60e51b815260206004820152600b60248201526a4d494e5f554e5354414b4560a81b60448201526064016102ef565b69043c33c19375648000008111156103b75760405162461bcd60e51b815260206004820152600b60248201526a4d41585f554e5354414b4560a81b60448201526064016102ef565b6103ca68056bc75e2d63100000826119cc565b1561040a5760405162461bcd60e51b815260206004820152601060248201526f554e5354414b455f4d554c5449504c4560801b60448201526064016102ef565b600080610415610e0a565b3360009081526004602052604090206001810154815493955091935091869161043d9161184e565b101561047e5760405162461bcd60e51b815260206004820152601060248201526f125b98dbdc9c9958dd08185b5bdd5b9d60821b60448201526064016102ef565b80600301544211156104dd576104933361077e565b8160020160008282546104a6919061184e565b90915550506001810154815482906000906104c290849061184e565b90915550506000600182015560048101839055600381018290555b60018101546104f55780546104f29086610e6d565b81555b6000816001015411801561050c5750806001015485105b156105265760018101546105209086610e6d565b60018201555b6000816001015411801561053d5750806001015485115b1561057557600061055b826001015487610e6d90919063ffffffff16565b6000600184015582549091506105719082610e6d565b8255505b84600360008282546105879190611989565b90915550506002546105a3906001600160a01b03163387610e80565b60405185815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a250506001600055505050565b600260005414156106085760405162461bcd60e51b81526004016102ef906117d6565b6002600055600154600160a01b900460ff16156106375760405162461bcd60e51b81526004016102ef90611777565b600080610642610e0a565b33600090815260046020526040902080549294509092509084111561066657600080fd5b80600301544211156106c55761067b3361077e565b81600201600082825461068e919061184e565b90915550506001810154815482906000906106aa90849061184e565b90915550506000600182015560048101839055600381018290555b83816002015410156106d657600080fd5b838160050160008282546106ea919061184e565b92505081905550838160020160008282546107059190611989565b909155505060405184815233907fd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a9060200160405180910390a2505060016000555050565b6001546001600160a01b031633146107745760405162461bcd60e51b81526004016102ef906117a1565b61077c610ee8565b565b6001600160a01b0381166000908152600460208181526040808420815160e0810183528154808252600183015494820185905260028301549382019390935260038201546060820152938101546080850152600581015460a08501526006015460c0840152839182916107f091610f6a565b835190915061080157505050919050565b82606001514211156108435761081b836080015142610f76565b9150811561084357610840683635c9adc5dea0000061083a8385610f9d565b90610fa9565b93505b505050919050565b6001546001600160a01b031633146108755760405162461bcd60e51b81526004016102ef906117a1565b61077c6000610fb5565b6001546001600160a01b031633146108a95760405162461bcd60e51b81526004016102ef906117a1565b600260005414156108cc5760405162461bcd60e51b81526004016102ef906117d6565b60026000556108f76108e66001546001600160a01b031690565b6001600160a01b0384169083610e80565b604080516001600160a01b0384168152602081018390527f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28910160405180910390a150506001600055565b6001546001600160a01b0316331461096c5760405162461bcd60e51b81526004016102ef906117a1565b61077c611007565b600260005414156109975760405162461bcd60e51b81526004016102ef906117d6565b6002600055600154600160a01b900460ff16156109c65760405162461bcd60e51b81526004016102ef90611777565b80683635c9adc5dea00000811015610a105760405162461bcd60e51b815260206004820152600d60248201526c4552525f4d494e5f5354414b4560981b60448201526064016102ef565b69043c33c1937564800000811115610a5a5760405162461bcd60e51b815260206004820152600d60248201526c4552525f4d41585f5354414b4560981b60448201526064016102ef565b610a6d683635c9adc5dea00000826119cc565b15610ab05760405162461bcd60e51b81526020600482015260136024820152724552525f5354414b455f4d554c544954504c4560681b60448201526064016102ef565b600080610abb610e0a565b336000908152600460205260409020600181015481549395509193509169043c33c19375648000009190610aef908861184e565b610af9919061184e565b1115610b3d5760405162461bcd60e51b8152602060048201526013602482015272414d4f554e5420495320544f4f204c4152474560681b60448201526064016102ef565b336000908152600560205260409020541580610b5857508054155b15610b8a576004810183905560038101829055805485908290600090610b7f90849061184e565b90915550610c079050565b8060030154421115610bed57610b9f3361077e565b816002016000828254610bb2919061184e565b9091555050600181015481548290600090610bce90849061184e565b9091555050600181018590556004810183905560038101829055610c07565b84816001016000828254610c01919061184e565b90915550505b8460036000828254610c19919061184e565b909155505033600090815260056020526040902054610c3990600161184e565b33600081815260056020526040902091909155600254610c66916001600160a01b0390911690308861108b565b60405185815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906020016105d1565b6001600160a01b0381166000908152600460208181526040808420815160e0810183528154808252600183015494820185905260028301549382019390935260038201546060820152938101546080850152600581015460a08501526006015460c084015283918291610d0a91610f6a565b8351909150610d1b57505050919050565b8260800151421115610d3c57610d35836080015142610f76565b9150610d4d565b610d4a428460800151610f76565b91505b610840683635c9adc5dea0000061083a610d6885600161184e565b8490610f9d565b6001546001600160a01b03163314610d995760405162461bcd60e51b81526004016102ef906117a1565b6001600160a01b038116610dfe5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102ef565b610e0781610fb5565b50565b6000806000806000610e1b426110c9565b925092509250610e3183838360176000806110f5565b945060008080610e4b610e4689610fa061184e565b6110c9565b925092509250610e6183838360176000806110f5565b96505050505050509091565b6000610e798284611989565b9392505050565b6040516001600160a01b038316602482015260448101829052610ee390849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152611151565b505050565b600154600160a01b900460ff1615610f125760405162461bcd60e51b81526004016102ef90611777565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610f4d3390565b6040516001600160a01b03909116815260200160405180910390a1565b6000610e79828461184e565b600081831115610f8557600080fd5b62015180610f938484611989565b610e799190611894565b6000610e79828461192b565b6000610e798284611894565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600154600160a01b900460ff166110575760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016102ef565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33610f4d565b6040516001600160a01b03808516602483015283166044820152606481018290526110c39085906323b872dd60e01b90608401610eac565b50505050565b60008060006110d784611223565b92506110e284611243565b91506110ed8461125d565b929491935050565b600081611103603c8561192b565b61110f610e108761192b565b6201518061111e8b8b8b611277565b611128919061192b565b611132919061184e565b61113c919061184e565b611146919061184e565b979650505050505050565b60006111a6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113b49092919063ffffffff16565b805190915015610ee357808060200190518101906111c491906116f0565b610ee35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102ef565b600061123a6112356201518084611894565b6113c3565b50909392505050565b60006112556112356201518084611894565b509392505050565b600061126f6112356201518084611894565b949350505050565b60006107b284101561128857600080fd5b838383600062253d8c60046064600c6112a2600e8861194a565b6112ac9190611866565b6112b88861132461180d565b6112c2919061180d565b6112cc9190611866565b6112d79060036118a8565b6112e19190611866565b600c806112ef600e8861194a565b6112f99190611866565b61130490600c6118a8565b61130f60028861194a565b611319919061194a565b6113259061016f6118a8565b61132f9190611866565b6004600c61133e600e8961194a565b6113489190611866565b611354896112c061180d565b61135e919061180d565b61136a906105b56118a8565b6113749190611866565b611380617d4b8761194a565b61138a919061180d565b611394919061180d565b61139e919061194a565b6113a8919061194a565b98975050505050505050565b606061126f8484600085611537565b60008080838162253d8c6113da8362010bd961180d565b6113e4919061180d565b9050600062023ab16113f78360046118a8565b6114019190611866565b905060046114128262023ab16118a8565b61141d90600361180d565b6114279190611866565b611431908361194a565b9150600062164b0961144484600161180d565b61145090610fa06118a8565b61145a9190611866565b9050600461146a826105b56118a8565b6114749190611866565b61147e908461194a565b61148990601f61180d565b9250600061098f61149b8560506118a8565b6114a59190611866565b9050600060506114b78361098f6118a8565b6114c19190611866565b6114cb908661194a565b90506114d8600b83611866565b94506114e585600c6118a8565b6114f083600261180d565b6114fa919061194a565b9150848361150960318761194a565b6115149060646118a8565b61151e919061180d565b611528919061180d565b9a919950975095505050505050565b6060824710156115985760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102ef565b6001600160a01b0385163b6115ef5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102ef565b600080866001600160a01b0316858760405161160b9190611728565b60006040518083038185875af1925050503d8060008114611648576040519150601f19603f3d011682016040523d82523d6000602084013e61164d565b606091505b509150915061114682828660608315611667575081610e79565b8251156116775782518084602001fd5b8160405162461bcd60e51b81526004016102ef9190611744565b80356001600160a01b03811681146116a857600080fd5b919050565b6000602082840312156116be578081fd5b610e7982611691565b600080604083850312156116d9578081fd5b6116e283611691565b946020939093013593505050565b600060208284031215611701578081fd5b81518015158114610e79578182fd5b600060208284031215611721578081fd5b5035919050565b6000825161173a8184602087016119a0565b9190910192915050565b60208152600082518060208401526117638160408501602087016119a0565b601f01601f19169190910160400192915050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600080821280156001600160ff1b038490038513161561182f5761182f6119e0565b600160ff1b8390038412811615611848576118486119e0565b50500190565b60008219821115611861576118616119e0565b500190565b600082611875576118756119f6565b600160ff1b82146000198414161561188f5761188f6119e0565b500590565b6000826118a3576118a36119f6565b500490565b60006001600160ff1b03818413828413808216868404861116156118ce576118ce6119e0565b600160ff1b848712828116878305891216156118ec576118ec6119e0565b858712925087820587128484161615611907576119076119e0565b8785058712818416161561191d5761191d6119e0565b505050929093029392505050565b6000816000190483118215151615611945576119456119e0565b500290565b60008083128015600160ff1b850184121615611968576119686119e0565b6001600160ff1b0384018313811615611983576119836119e0565b50500390565b60008282101561199b5761199b6119e0565b500390565b60005b838110156119bb5781810151838201526020016119a3565b838111156110c35750506000910152565b6000826119db576119db6119f6565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea264697066735822122094de3ad324929891d97506fa13f5ef3121509e6e33aa2f42c307b51850d1bb9a64736f6c63430008040033";

export class NFTRewards__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _stakingToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTRewards> {
    return super.deploy(_stakingToken, overrides || {}) as Promise<NFTRewards>;
  }
  getDeployTransaction(
    _stakingToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_stakingToken, overrides || {});
  }
  attach(address: string): NFTRewards {
    return super.attach(address) as NFTRewards;
  }
  connect(signer: Signer): NFTRewards__factory {
    return super.connect(signer) as NFTRewards__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTRewardsInterface {
    return new utils.Interface(_abi) as NFTRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTRewards {
    return new Contract(address, _abi, signerOrProvider) as NFTRewards;
  }
}
