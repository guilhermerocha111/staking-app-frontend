/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { NFTRewards, NFTRewardsInterface } from "../NFTRewards";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_stakingToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "enjinAddress",
        type: "address",
      },
    ],
    name: "Claimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Recovered",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Staked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Withdrawn",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "calculateRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "enjinAddress",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "currentStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_staker",
        type: "address",
      },
    ],
    name: "estimatedRewards",
    outputs: [
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getCurrentStaked",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "numberOfStakes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "poolStakers",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastStakeAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "rewards",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastStakeTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "claimed",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "puase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenAmount",
        type: "uint256",
      },
    ],
    name: "recoverERC20",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakingToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpuase",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "unstake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405162001b0138038062001b01833981016040819052610031916100c3565b600160005561003f33610071565b6001805460ff60a01b19169055600280546001600160a01b0319166001600160a01b03929092169190911790556100f1565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6000602082840312156100d4578081fd5b81516001600160a01b03811681146100ea578182fd5b9392505050565b611a0080620001016000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c80638a9758fe116100a2578063daae16e111610071578063daae16e11461025b578063ddd5e1b21461026e578063dfef667914610281578063eeb58d0a146102a1578063f2fde38b146102a957600080fd5b80638a9758fe146101bf5780638da5cb5b146101c7578063a694fc3a146101d8578063cddb3e7b146101eb57600080fd5b8063695464e9116100de578063695464e914610170578063715018a61461017957806372f702f3146101815780638980f11f146101ac57600080fd5b80632e17de78146101105780635c975abb146101255780635d5eaa4f1461014757806364ab86751461014f575b600080fd5b61012361011e3660046116a3565b6102bc565b005b600154600160a01b900460ff1660405190151581526020015b60405180910390f35b6101236105c2565b61016261015d366004611640565b6105f6565b60405190815260200161013e565b61016260035481565b6101236106e2565b600254610194906001600160a01b031681565b6040516001600160a01b03909116815260200161013e565b6101236101ba36600461165a565b610716565b6101236107d9565b6001546001600160a01b0316610194565b6101236101e63660046116a3565b61080b565b61022e6101f9366004611640565b600460208190526000918252604090912080546001820154600283015460038401549484015460059094015492949193909286565b604080519687526020870195909552938501929092526060840152608083015260a082015260c00161013e565b610162610269366004611640565b610b2f565b61012361027c3660046116bb565b610bb3565b61016261028f366004611640565b60056020526000908152604090205481565b600354610162565b6101236102b7366004611640565b610d0a565b600260005414156102e85760405162461bcd60e51b81526004016102df90611794565b60405180910390fd5b6002600055600154600160a01b900460ff16156103175760405162461bcd60e51b81526004016102df90611735565b80683635c9adc5dea0000081101561035f5760405162461bcd60e51b815260206004820152600b60248201526a4d494e5f554e5354414b4560a81b60448201526064016102df565b69043c33c19375648000008111156103a75760405162461bcd60e51b815260206004820152600b60248201526a4d41585f554e5354414b4560a81b60448201526064016102df565b6103ba68056bc75e2d631000008261198a565b156103fa5760405162461bcd60e51b815260206004820152601060248201526f554e5354414b455f4d554c5449504c4560801b60448201526064016102df565b600080610405610da5565b3360009081526004602052604090206001810154815493955091935091869161042d9161180c565b101561046e5760405162461bcd60e51b815260206004820152601060248201526f125b98dbdc9c9958dd08185b5bdd5b9d60821b60448201526064016102df565b80600301544211156104cd57610483336105f6565b816002016000828254610496919061180c565b90915550506001810154815482906000906104b290849061180c565b90915550506000600182015560048101839055600381018290555b60018101546104e95780546104e29086610e08565b8155610552565b60008160010154118015610501575080600101548511155b1561051f5760018101546105159086610e08565b6001820155610552565b6000610538826001015487610e0890919063ffffffff16565b60006001840155825490915061054e9082610e08565b8255505b84600360008282546105649190611947565b9091555050600254610580906001600160a01b03163387610e1b565b60405185815233907f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5906020015b60405180910390a250506001600055505050565b6001546001600160a01b031633146105ec5760405162461bcd60e51b81526004016102df9061175f565b6105f4610e83565b565b6001600160a01b0381166000908152600460208181526040808420815160c08101835281548082526001830154948201949094526002820154928101929092526003810154606083015292830154608082015260059092015460a08301528290819061066457505050919050565b6060830151610676906201518061180c565b421115610694576020830151835161068d91610f05565b9050610698565b5081515b82606001514211156106da576106b2836080015142610f11565b915081156106da576106d7683635c9adc5dea000006106d18385610f38565b90610f44565b93505b505050919050565b6001546001600160a01b0316331461070c5760405162461bcd60e51b81526004016102df9061175f565b6105f46000610f50565b6001546001600160a01b031633146107405760405162461bcd60e51b81526004016102df9061175f565b600260005414156107635760405162461bcd60e51b81526004016102df90611794565b600260005561078e61077d6001546001600160a01b031690565b6001600160a01b0384169083610e1b565b604080516001600160a01b0384168152602081018390527f8c1256b8896378cd5044f80c202f9772b9d77dc85c8a6eb51967210b09bfaa28910160405180910390a150506001600055565b6001546001600160a01b031633146108035760405162461bcd60e51b81526004016102df9061175f565b6105f4610fa2565b6002600054141561082e5760405162461bcd60e51b81526004016102df90611794565b6002600055600154600160a01b900460ff161561085d5760405162461bcd60e51b81526004016102df90611735565b80683635c9adc5dea000008110156108a75760405162461bcd60e51b815260206004820152600d60248201526c4552525f4d494e5f5354414b4560981b60448201526064016102df565b69043c33c19375648000008111156108f15760405162461bcd60e51b815260206004820152600d60248201526c4552525f4d41585f5354414b4560981b60448201526064016102df565b610904683635c9adc5dea000008261198a565b156109475760405162461bcd60e51b81526020600482015260136024820152724552525f5354414b455f4d554c544954504c4560681b60448201526064016102df565b600080610952610da5565b336000908152600460205260409020600181015481549395509193509169043c33c19375648000009190610986908861180c565b610990919061180c565b11156109d45760405162461bcd60e51b8152602060048201526013602482015272414d4f554e5420495320544f4f204c4152474560681b60448201526064016102df565b3360009081526005602052604090205415806109ef57508054155b15610a21576004810183905560038101829055805485908290600090610a1690849061180c565b90915550610a9e9050565b8060030154421115610a8457610a36336105f6565b816002016000828254610a49919061180c565b9091555050600181015481548290600090610a6590849061180c565b9091555050600181018590556004810183905560038101829055610a9e565b84816001016000828254610a98919061180c565b90915550505b8460036000828254610ab0919061180c565b909155505033600090815260056020526040902054610ad090600161180c565b33600081815260056020526040902091909155600254610afd916001600160a01b03909116903088611026565b60405185815233907f9e71bc8eea02a63969f509818f2dafb9254532904319f9dbda79b67bd34a5f3d906020016105ae565b6001600160a01b0381166000908152600460208181526040808420815160c08101835281548082526001830154948201859052600283015493820193909352600382015460608201529381015460808501526005015460a08401528391610b969190610f05565b9050610bab81683635c9adc5dea00000610f44565b949350505050565b60026000541415610bd65760405162461bcd60e51b81526004016102df90611794565b6002600055600154600160a01b900460ff1615610c055760405162461bcd60e51b81526004016102df90611735565b600080610c10610da5565b336000908152600460205260409020600381015492945090925090421115610c8557610c3b336105f6565b816002016000828254610c4e919061180c565b9091555050600181015481548290600090610c6a90849061180c565b90915550506000600182015560048101839055600381018290555b8481600201541015610c9657600080fd5b84816005016000828254610caa919061180c565b9250508190555084816002016000828254610cc59190611947565b9091555050604080518681526001600160a01b038616602082015233917f7e6632ca16a0ac6cf28448500b1a17d96c8b8163ad4c4a9b44ef5386cc02779e91016105ae565b6001546001600160a01b03163314610d345760405162461bcd60e51b81526004016102df9061175f565b6001600160a01b038116610d995760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102df565b610da281610f50565b50565b6000806000806000610db642611064565b925092509250610dcc8383836017600080611090565b945060008080610de6610de189610fa061180c565b611064565b925092509250610dfc8383836017600080611090565b96505050505050509091565b6000610e148284611947565b9392505050565b6040516001600160a01b038316602482015260448101829052610e7e90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526110ec565b505050565b600154600160a01b900460ff1615610ead5760405162461bcd60e51b81526004016102df90611735565b6001805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610ee83390565b6040516001600160a01b03909116815260200160405180910390a1565b6000610e14828461180c565b600081831115610f2057600080fd5b62015180610f2e8484611947565b610e149190611852565b6000610e1482846118e9565b6000610e148284611852565b600180546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600154600160a01b900460ff16610ff25760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016102df565b6001805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa33610ee8565b6040516001600160a01b038085166024830152831660448201526064810182905261105e9085906323b872dd60e01b90608401610e47565b50505050565b6000806000611072846111be565b925061107d846111de565b9150611088846111f8565b929491935050565b60008161109e603c856118e9565b6110aa610e10876118e9565b620151806110b98b8b8b61120a565b6110c391906118e9565b6110cd919061180c565b6110d7919061180c565b6110e1919061180c565b979650505050505050565b6000611141826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166113479092919063ffffffff16565b805190915015610e7e578080602001905181019061115f9190611683565b610e7e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102df565b60006111d56111d06201518084611852565b611356565b50909392505050565b60006111f06111d06201518084611852565b509392505050565b6000610bab6111d06201518084611852565b60006107b284101561121b57600080fd5b838383600062253d8c60046064600c611235600e88611908565b61123f9190611824565b61124b886113246117cb565b61125591906117cb565b61125f9190611824565b61126a906003611866565b6112749190611824565b600c80611282600e88611908565b61128c9190611824565b61129790600c611866565b6112a2600288611908565b6112ac9190611908565b6112b89061016f611866565b6112c29190611824565b6004600c6112d1600e89611908565b6112db9190611824565b6112e7896112c06117cb565b6112f191906117cb565b6112fd906105b5611866565b6113079190611824565b611313617d4b87611908565b61131d91906117cb565b61132791906117cb565b6113319190611908565b61133b9190611908565b98975050505050505050565b6060610bab84846000856114ca565b60008080838162253d8c61136d8362010bd96117cb565b61137791906117cb565b9050600062023ab161138a836004611866565b6113949190611824565b905060046113a58262023ab1611866565b6113b09060036117cb565b6113ba9190611824565b6113c49083611908565b9150600062164b096113d78460016117cb565b6113e390610fa0611866565b6113ed9190611824565b905060046113fd826105b5611866565b6114079190611824565b6114119084611908565b61141c90601f6117cb565b9250600061098f61142e856050611866565b6114389190611824565b90506000605061144a8361098f611866565b6114549190611824565b61145e9086611908565b905061146b600b83611824565b945061147885600c611866565b6114838360026117cb565b61148d9190611908565b9150848361149c603187611908565b6114a7906064611866565b6114b191906117cb565b6114bb91906117cb565b9a919950975095505050505050565b60608247101561152b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102df565b6001600160a01b0385163b6115825760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102df565b600080866001600160a01b0316858760405161159e91906116e6565b60006040518083038185875af1925050503d80600081146115db576040519150601f19603f3d011682016040523d82523d6000602084013e6115e0565b606091505b50915091506110e1828286606083156115fa575081610e14565b82511561160a5782518084602001fd5b8160405162461bcd60e51b81526004016102df9190611702565b80356001600160a01b038116811461163b57600080fd5b919050565b600060208284031215611651578081fd5b610e1482611624565b6000806040838503121561166c578081fd5b61167583611624565b946020939093013593505050565b600060208284031215611694578081fd5b81518015158114610e14578182fd5b6000602082840312156116b4578081fd5b5035919050565b600080604083850312156116cd578182fd5b823591506116dd60208401611624565b90509250929050565b600082516116f881846020870161195e565b9190910192915050565b602081526000825180602084015261172181604085016020870161195e565b601f01601f19169190910160400192915050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b600080821280156001600160ff1b03849003851316156117ed576117ed61199e565b600160ff1b83900384128116156118065761180661199e565b50500190565b6000821982111561181f5761181f61199e565b500190565b600082611833576118336119b4565b600160ff1b82146000198414161561184d5761184d61199e565b500590565b600082611861576118616119b4565b500490565b60006001600160ff1b038184138284138082168684048611161561188c5761188c61199e565b600160ff1b848712828116878305891216156118aa576118aa61199e565b8587129250878205871284841616156118c5576118c561199e565b878505871281841616156118db576118db61199e565b505050929093029392505050565b60008160001904831182151516156119035761190361199e565b500290565b60008083128015600160ff1b8501841216156119265761192661199e565b6001600160ff1b03840183138116156119415761194161199e565b50500390565b6000828210156119595761195961199e565b500390565b60005b83811015611979578181015183820152602001611961565b8381111561105e5750506000910152565b600082611999576119996119b4565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea26469706673582212201ba2d3b07ff9539f7607483a5fc52dd0749dbe78fa99659522dc7c477270cbf764736f6c63430008040033";

export class NFTRewards__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _stakingToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NFTRewards> {
    return super.deploy(_stakingToken, overrides || {}) as Promise<NFTRewards>;
  }
  getDeployTransaction(
    _stakingToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_stakingToken, overrides || {});
  }
  attach(address: string): NFTRewards {
    return super.attach(address) as NFTRewards;
  }
  connect(signer: Signer): NFTRewards__factory {
    return super.connect(signer) as NFTRewards__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTRewardsInterface {
    return new utils.Interface(_abi) as NFTRewardsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTRewards {
    return new Contract(address, _abi, signerOrProvider) as NFTRewards;
  }
}
